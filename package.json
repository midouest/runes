{
  "name": "@runes/runes",
  "private": true,
  "description": "Norns screen live-coding",
  "license": "GPL-3.0",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "predeploy": "yarn build-web",
    "deploy": "gh-pages -d packages/web/build",
    "submodule": "git submodule init && git submodule update",
    "configure": "yarn workspace @runes/matron configure",
    "configure-debug": "yarn configure -DCMAKE_BUILD_TYPE=DEBUG",
    "configure-minsizerel": "yarn configure -DCMAKE_BUILD_TYPE=MINSIZEREL",
    "configure-release": "yarn configure -DCMAKE_BUILD_TYPE=RELEASE",
    "configure-relwithdebinfo": "yarn configure -DCMAKE_BUILD_TYPE=RELWITHDEBINFO",
    "build": "yarn workspace @runes/matron build",
    "build-web": "yarn workspace @runes/web build",
    "build-parallel": "yarn build -j4",
    "build-install": "yarn workspace @runes/matron build-install",
    "clean": "yarn workspace @runes/matron clean",
    "clean-build": "yarn clean && yarn configure && yarn build-install",
    "setup": "yarn submodule && yarn install && yarn clean-build",
    "start": "yarn workspace @runes/web start",
    "docker-image": "docker build -t midouest/runes:latest .",
    "docker-push": "docker push midouest/runes:latest",
    "docker": "docker run -it --rm --name runes --mount type=bind,source=\"$(pwd)\",target=/runes -v runes_node_modules:/runes/node_modules -v runes_matron_build:/runes/packages/matron/build -p 3000:3000 runes:latest",
    "docker-setup": "yarn docker yarn setup",
    "docker-start": "yarn docker yarn start",
    "test": "yarn workspace @runes/web test"
  },
  "devDependencies": {
    "gh-pages": "^3.2.3"
  },
  "dependencies": {}
}
